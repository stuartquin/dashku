module.exports =
  name: "D3 Bullet"
  html: "<!-- This is where your widget's html goes -->\n<div id=\"message\">This Is your robot talking</div>\n<div id=\"bullet\"></div>"
  css:  "\n#bullet {\n  height: 10%;\n}\n.axis path,\n.axis line {\n    fill: none;\n    stroke: #444;\n    shape-rendering: crispEdges;\n}\n\n.axis text {\n    font-family: sans-serif;\n    font-size: 10px;\n    fill: #777;\n}\n"
  script: "// The widget's html as a jQuery object\nvar widget = this.widget;\nvar widgetId = widget.parent().attr('data-id');\nvar load_data = {\n  \"targets\": [\n    {\n      \"title\": \"Bad\",\n      \"color\": \"#ae432e\",\n      \"start\": 0,\n      \"width\": 50\n    },\n    {\n      \"title\": \"OK\",\n      \"color\": \"#efaa24\",\n      \"start\": 50,\n      \"width\": 40\n    },\n    {\n      \"title\": \"Good\",\n      \"color\": \"#77ab13\",\n      \"start\": 90,\n      \"width\": 10\n    }\n  ],\n  \"projected\": 90,\n  \"current\":   65,\n  \"previous\":  50\n};\n\n// This runs when the widget is loaded\nthis.on('load', function(data){\n  head.js('/javascripts/d3.v2.min.js');\n  head.ready(function(){\n    bullet = new Bullet( \".widget[data-id='\"+ widgetId +\"'] .content\", widget.width(), Math.round(widget.height() / 2));\n    bullet.render(load_data);\n  });\n});\n\n// This runs when the widget receives a transmission\nthis.on('transmission', function(data){\n  bullet.render(data);\n});\n\nvar Bullet = function( id, width, height ){\n    // Some defaults\n    this.previous_width = 2;\n    this.xpos = 5;\n\n    this.animation_duration = 250;\n\n    // We create the animation canvas here\n    d3.select(id).selectAll( "svg" ).remove();\n    this.svg = d3.select(id)\n      .append(\"svg\")\n      .attr(\"width\",  width )\n      .attr(\"height\", height);\n\n    // The width and height of the bar\n    this.width  = width  - 20;\n    this.height = height - 20;\n};\n\n  Bullet.prototype.render_scale = function( data, total ){\n    this.scale = d3.scale.linear()\n                 .domain( [0, total])\n                 .range( [0,  this.width]);\n\n    if ( !this.x_axis ) {\n        this.x_axis = d3.svg.axis();\n        this.x_axis.scale( this.scale )\n                   .orient( \"bottom\" )\n        this.axis = this.svg.append(\"g\")\n                .attr(\"class\", \"axis\")\n                .attr(\"transform\", \"translate(\" +(this.xpos)+\",\" + (this.height) + \")\");\n    }\n\n    this.x_axis.scale( this.scale );\n    this.axis.call( this.x_axis );\n  };\n\n  Bullet.prototype.render = function( data ) {\n    var self = this;\n    var total = 0;\n\n    for( var i in data.targets){\n      total += data.targets[i].width;\n    }\n    var ratio = this.width / total;\n\n    if ( this.targets ) {\n        this.update_targets( data, ratio );\n    } else {\n        this.render_targets( data, ratio );\n    }\n\n    if ( this.current_bar ){\n      this.update_info_bar( data, ratio );\n    } else {\n      this.render_info_bar( data, ratio );\n    }\n\n    this.render_scale( data, total );\n\n    if( data.message ){\n      d3.select(\"#message\").text( data.message );\n    }\n  }\n\n  Bullet.prototype.update_targets = function( data , ratio ) {\n    var self = this;\n\n    var targets = this.svg.selectAll( \".target\" )\n    .data( data.targets )\n    .attr( \"fill\", \"blue\")\n    .attr( \"x\", function( d ) {\n      return self.xpos + (d.start * ratio);\n    })\n    .attr( \"width\", function(d) {\n      return d.width * ratio;\n    })\n    .attr( \"fill\", function( d ) {\n      return d.color;\n    });\n\n    targets.enter().insert(\"rect\", \":first-child\")\n    .attr( \"class\", \"target\" )\n    .attr( \"fill\", function( d ) {\n        return d.color;\n    })\n    .attr( \"height\", this.height )\n    .attr( \"x\", function( d ) {\n      return Math.round(self.xpos + (d.start * ratio));\n    })\n    .attr( \"width\", function(d) {\n      return Math.round( d.width * ratio );\n    });\n\n    this.svg.selectAll(\".hinting\").data( data.targets )\n    .transition().duration( this.animation_duration )\n    .attr( \"fill\", \"white\" )\n    .attr( \"width\", 2)\n    .attr( \"height\", this.height )\n    .attr( \"x\", function( d ){\n      var x =  self.xpos + (d.start  + d.width ) * ratio;\n      return x - 2;\n    })\n    .attr( \"opacity\", 0.2);\n  }\n\n  Bullet.prototype.render_targets = function ( data, ratio ){\n    var self = this;\n    this.targets = this.svg.selectAll(\"rect\");\n\n    // Draw them initially\n    this.targets.data(data.targets)\n    .enter()\n    .append(\"rect\")\n    .attr( \"height\", this.height )\n    .attr( \"class\", \"target\" )\n    .attr( \"x\", function( d ) {\n      return self.xpos + (d.start * ratio);\n    })\n    .attr( \"width\", function(d) {\n      return d.width * ratio;\n    })\n    .attr( \"fill\", function( d ) {\n      return d.color;\n    });\n\n    this.targets.data(data.targets).enter().append(\"rect\")\n    .attr(\"class\", \"hinting\")\n    .attr( \"fill\", \"white\" )\n    .attr( \"width\", 2)\n    .attr( \"height\", this.height )\n    .attr( \"x\", function( d ){\n      var x =  self.xpos + (d.start  + d.width ) * ratio;\n      return x - 2;\n    })\n    .attr( \"opacity\", 0.2);\n  }\n\n  /**\n   * Called if we've already loaded some data\n     */\n  Bullet.prototype.update_info_bar = function( data, ratio ){\n    this.current_bar.transition().duration(this.animation_duration)\n    .attr( \"x\",      this.xpos)\n    .attr( \"width\",  Math.round( data.current * ratio) );\n\n    this.previous_bar.transition().duration(this.animation_duration)\n    .attr( \"x\",      this.xpos + (data.previous-this.previous_width) * ratio )\n    .attr( \"width\",  this.previous_width * ratio );\n\n      // Draw Projected\n    if ( data.projected > data.current ) {\n      var projected_width = (data.projected - data.current) * ratio;\n      this.projected_bar.transition().duration(this.animation_duration)\n      .attr( \"fill\", \"white\" )\n      .attr( \"x\",      this.xpos + ( data.current * ratio ) )\n      .attr( \"width\",  projected_width )\n      .attr( \"fill-opacity\", 0.5);\n\n      if ( data.previous > data.current ){\n        this.previous_bar.attr(\"fill\", \"white\").attr( \"fill-opacity\", 0.3);\n      } else {\n        this.previous_bar.attr(\"fill\", \"black\").attr( \"fill-opacity\", 1);\n      }\n    }\n\n  }\n\n  Bullet.prototype.render_info_bar = function( data, ratio ){\n    this.current_bar = this.svg.append( \"rect\" )\n    .attr( \"fill\", \"black\" )\n    .attr( \"x\",      this.xpos)\n    .attr( \"width\",  Math.round( data.current * ratio) )\n    .attr( \"height\", Math.floor( this.height / 3 ) )\n    .attr( \"y\",      Math.floor( this.height / 3 ) );\n\n    // Draw previous\n    this.previous_bar = this.svg.append( \"rect\" )\n    .attr( \"fill\", \"black\" )\n    .attr( \"x\",      this.xpos + (data.previous-this.previous_width) * ratio )\n    .attr( \"y\",      Math.floor( this.height / 5 ) )\n    .attr( \"width\",  this.previous_width * ratio )\n    .attr( \"height\", Math.floor( this.height / 5 ) * 3 );\n\n    // Draw Projected\n     this.projected_bar = this.svg.append( \"rect\" );\n    if ( data.projected > data.current ) {\n        var projected_width = (data.projected - data.current) * ratio;\n        this.projected_bar.attr( \"fill\", \"white\" )\n        .attr( \"x\",      this.xpos + ( data.current * ratio ) )\n        .attr( \"y\",      Math.floor( this.height/3 ) )\n        .attr( \"width\",  projected_width )\n        .attr( \"height\", Math.floor( this.height/3 ) )\n        .attr( \"fill-opacity\", 0.5);\n\n      if ( data.previous > data.current ){\n        this.previous_bar.attr(\"fill\", \"white\").attr( \"fill-opacity\", 0.3);\n      }\n    }\n  }\n"
  json: "{\n  \"targets\": [\n    {\n      \"title\": \"Bad\",\n      \"color\": \"#ae432e\",\n      \"start\": 0,\n      \"width\": 70\n    },\n    {\n      \"title\": \"OK\",\n      \"color\": \"#efaa24\",\n      \"start\": 70,\n      \"width\": 30\n    },\n    {\n      \"title\": \"Good\",\n      \"color\": \"#77ab13\",\n      \"start\": 100,\n      \"width\": 20\n    }\n  ],\n  \"projected\": 110,\n  \"current\":   90,\n  \"previous\":  75\n}\n"
  snapshotUrl: "/images/widgetTemplates/d3BulletImg.png"
